#AUTOGENERATED! DO NOT EDIT! File to edit: dev/11b_segmentation_losses.ipynb (unless otherwise specified).

__all__ = ['cross_entropy', 'soft_dice_loss']

#Cell
from fastai.vision import *
from .lovasz_loss import *

#Cell
cross_entropy = CrossEntropyFlat(axis=1)

#Cell
def soft_dice_loss(outputs, targets, per_image=False):
    outputs = outputs.softmax(1)[:,1,:]
    batch_size = outputs.size()[0]
    eps = 1e-5
    if not per_image:
        batch_size = 1
    dice_target = targets.contiguous().view(batch_size, -1).float()
    dice_output = outputs.contiguous().view(batch_size, -1)
    intersection = torch.sum(dice_output * dice_target, dim=1)
    union = torch.sum(dice_output, dim=1) + torch.sum(dice_target, dim=1) + eps
    loss = (1 - (2 * intersection + eps) / union).mean()

    return loss