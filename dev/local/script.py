#AUTOGENERATED! DO NOT EDIT! File to edit: dev/01_script.ipynb (unless otherwise specified).

__all__ = ['run_command']

#Cell
import subprocess
import shlex
import datetime

#Cell
def run_command(command, stderr_fn=None):
    "Run shell command as an external process, optionally write err to stderr_fn"
    if type(command) == str: command = shlex.split(command)
    elif type(command) == list: command = command
    else: raise AssertionError("Command should be string or list")
    process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    while True:
        output = process.stdout.readline()
        if output == b'' and process.poll() is not None: break
        if output: print (output.decode().strip())
    rc = process.poll()
    stdout, stderr =  process.communicate()
    out = stdout.decode(); print(out)
    err = stderr.decode(); print(err)
#     if rc != 0:
    if stderr_fn:
        with open(stderr_fn, "a") as f:
            now = datetime.datetime.now().strftime("%m/%d/%Y, %H:%M:%S")
            f.write(f"\n\n\nAPPENDED NEW LOG at: {now}\n")
            f.write(f"COMMAND: {command}\n")
            f.write(f"STDERR: {err}")
            f.write(f"STDOUT: {out}")
    return rc